
from reportlab.lib.pagesizes import LETTER
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from reportlab.lib.utils import ImageReader
from io import BytesIO
from flask import current_app

def build_rent_receipt_pdf(rent_record):
    buf = BytesIO()
    c = canvas.Canvas(buf, pagesize=LETTER)
    width, height = LETTER

    brand = current_app.config.get("PDF_BRAND_NAME", "EstateCore")
    tagline = current_app.config.get("PDF_TAGLINE", "Intelligent Property Management")
    logo_path = current_app.config.get("PDF_LOGO_PATH")

    y = height - 1*inch
    if logo_path:
        try:
            c.drawImage(ImageReader(logo_path), 0.75*inch, y-0.5*inch, width=1.25*inch, preserveAspectRatio=True, mask='auto')
        except Exception:
            pass
    c.setFont("Helvetica-Bold", 16)
    c.drawString(2*inch, y, f"{brand} â€” Rent Receipt")
    c.setFont("Helvetica", 10)
    c.drawString(2*inch, y-12, tagline)

    c.setFont("Helvetica", 12)
    top = y - 40
    c.drawString(1*inch, top, f"Receipt ID: {rent_record.id}")
    c.drawString(1*inch, top-16, f"Property ID: {rent_record.property_id}")
    c.drawString(1*inch, top-32, f"Unit ID: {rent_record.unit_id or '-'}")
    c.drawString(1*inch, top-48, f"Tenant ID: {rent_record.tenant_id or '-'}")
    c.drawString(1*inch, top-64, f"Month: {rent_record.month.isoformat()}")
    c.drawString(1*inch, top-80, f"Amount Due: ${float(rent_record.amount_due):.2f}")
    c.drawString(1*inch, top-96, f"Amount Paid: ${float(rent_record.amount_paid):.2f}")
    c.drawString(1*inch, top-112, f"Status: {rent_record.status}")

    c.setFont("Helvetica-Oblique", 9)
    c.drawString(1*inch, 0.75*inch, "Generated by EstateCore")

    c.showPage()
    c.save()
    return buf.getvalue()
